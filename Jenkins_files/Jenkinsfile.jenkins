pipeline {
    agent any
    stages {
        stage('Clone feature branche') {
			when {
				not {
					branch 'master'
				}
			}
            steps {
				sh 'rm -rf Large-pipe'
				sh 'git clone --branch='+ env.BRANCH_NAME +' https://github.com/Threadripper1/Large-pipe.git'
			}
        }
		stage('List Docker files') {
			 when {
			 	not {
			 		branch 'master'
			 	}
			 }
			steps {
				sh 'find ./docker -name "Dockerfile" -exec cat {} \\;'
			}
		}
	stage('Merge feature branch into master') {
			 when {
			 	changeRequest target: 'master'
			 }
			// steps {
			// 	script {
			// 		try {
			// 			sh 'git checkout master'
			// 			sh 'git merge $BRANCH'
			// 		}
			// 		catch(exc) {
			// 			echo 'Pipeline error, merge failed.'
			// 		}
			// 	}
			// }
		}
	}
}
